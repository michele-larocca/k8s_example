kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer


---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
spec:
  capacity:
    storage: 200Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  # StorageClass has a reclaim policy Retain
  # persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /tmp/data/db
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        command:
        - mongod
        - "--auth"
        resources: {}
        volumeMounts:
        - name: mongo-volume
          mountPath: /data/db
        env:
          - name: MONGO_DBNAME
            valueFrom:
              configMapKeyRef:
                key: MONGODB_DBNAME
                name: mongo-env
          - name: MONGODB_PASSWORD
            valueFrom:
              configMapKeyRef:
                key: MONGODB_PASSWORD
                name: mongo-env
      volumes:
      - name: mongo-volume
        persistentVolumeClaim:
          claimName: mongo-pvc



